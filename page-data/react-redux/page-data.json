{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-redux/","result":{"data":{"site":{"siteMetadata":{"title":"{easy-code} Blog"}},"markdownRemark":{"id":"2d307e45-e00a-5996-a074-e3f982dbd24c","excerpt":"Redux is a popular state management tool that can be used in conjunction with React to manage the state of an application. It works by implementing aâ€¦","html":"<center>\n<img src=\"https://raw.githubusercontent.com/reduxjs/redux/master/logo/logo.png\" alt=\"Redux Logo\" width=\"150\">\n</center>\n<p><a href=\"https://react-redux.js.org/\">Redux</a> is a popular state management tool that can be used in conjunction with React to manage the state of an application. It works by implementing a unidirectional data flow, in which actions are dispatched to a central store, which then updates the state of the application and sends the updated state back to the components that need it.</p>\n<p>Here's a high-level overview of how Redux works with React:</p>\n<ol>\n<li>\n<p>The user interacts with the React components in the application, triggering an action to be dispatched.</p>\n</li>\n<li>\n<p>The action is a JavaScript object that describes the change that needs to be made to the application state. It is sent to the Redux store.</p>\n</li>\n<li>\n<p>The Redux store receives the action and uses a reducer function to update the state of the application based on the action. The reducer function is a pure function that takes in the current state and the action, and returns the updated state.</p>\n</li>\n<li>\n<p>The updated state is sent back to the React components, which use the new state to re-render and display the updated data to the user.</p>\n</li>\n</ol>\n<p>Using Redux with React can help you manage the state of your application in a centralized and predictable way, making it easier to reason about and debug your code. It also enforces a strict unidirectional data flow, which can make your application easier to test and maintain.</p>\n<h5>Before we start</h5>\n<p>Add the Redux Toolkit and React Redux packages to your project:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @reduxjs/toolkit react-redux</code></pre></div>\n<h4>Some code to understand:</h4>\n<p>In this example, I will show how to use Redux on a counter application. For that, we need the following:</p>\n<ol>\n<li><strong>createSlice()</strong> is a function that get a name, initial state and reducers.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createSlice <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@reduxjs/toolkit'</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> counterSlice <span class=\"token operator\">=</span> <span class=\"token function\">createSlice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'easyCounter'</span><span class=\"token punctuation\">,</span>\r\n    initialState<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        counterValue<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    reducers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function-variable function\">incrementValue</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> \r\n            state<span class=\"token punctuation\">.</span>counterValue<span class=\"token operator\">++</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token function-variable function\">decrementValue</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n            state<span class=\"token punctuation\">.</span>counterValue<span class=\"token operator\">--</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token function-variable function\">addByAmount</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n            state<span class=\"token punctuation\">.</span>counterValue <span class=\"token operator\">+=</span> action<span class=\"token punctuation\">.</span>payload\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> incrementValue<span class=\"token punctuation\">,</span> decrementValue<span class=\"token punctuation\">,</span> addByAmount <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> counterSlice<span class=\"token punctuation\">.</span>actions<span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">selectCount</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> state<span class=\"token punctuation\">.</span>easyCounter<span class=\"token punctuation\">.</span>counterValue<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> counterSlice<span class=\"token punctuation\">.</span>reducer<span class=\"token punctuation\">;</span>\r\n</code></pre></div>\n<ol start=\"2\">\n<li><strong>configureStore()</strong> which will holds the state of the application. Changing the state is allowed through <code class=\"language-text\">dispatch(action)</code>.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\">\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> configureStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@reduxjs/toolkit'</span>\r\n<span class=\"token keyword\">import</span> counterReducer <span class=\"token keyword\">from</span> <span class=\"token string\">'./counterSlice'</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  reducer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    counter<span class=\"token operator\">:</span> counterReducer<span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li>Usage in the Components</li>\n</ol>\n<p>Now we can read the data from the our store using the <code class=\"language-text\">useSelector()</code> hook, and to update new values using the <code class=\"language-text\">useDispatch()</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSelector<span class=\"token punctuation\">,</span> useDispatch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> incrementValue<span class=\"token punctuation\">,</span> decrementValue<span class=\"token punctuation\">,</span> addByAmount<span class=\"token punctuation\">,</span> selectCount <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./counterSlice'</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">EasyCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token function\">useSelector</span><span class=\"token punctuation\">(</span>selectCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> dispatch <span class=\"token operator\">=</span> <span class=\"token function\">useDispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>inputValue<span class=\"token punctuation\">,</span> setInputValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'10'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Counter value: </span><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">incrementValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Plus 1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">decrementValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Minus 1</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> \r\n                    <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>inputValue<span class=\"token punctuation\">}</span></span>\r\n                    <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token function\">setInputValue</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>inputValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\r\n                    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">addByAmount</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>inputValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Add value By Amount</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\r\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n</code></pre></div>\n<ol start=\"4\">\n<li><strong>Use <code class=\"language-text\">&lt;Provider></code></strong> and provide the the Redux store so the it will be available to our React components. Open your <code class=\"language-text\">index.js</code> file and add the <code class=\"language-text\">&lt;Provider></code> as the following example:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\r\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom/client'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./index.css'</span>\r\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span>\r\n\r\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./app/store'</span>\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Provider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span>\r\n\r\n\r\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nroot<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\r\n  <span class=\"token operator\">&lt;</span>Provider store<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Provider<span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n</code></pre></div>\n<h4>Some practices</h4>\n<p>We all agree that the better way to really understand code or framework is get your hand dirty. So you are welcome to do that, but for now I picked up some GitHub projects that use React Redux.</p>\n<ol>\n<li><a href=\"https://github.com/chvin/react-tetris\">Tetris</a> - This project is a Tetris classic game</li>\n</ol>\n<center>\n    <img src=\"https://img.alicdn.com/tps/TB1Ag7CNXXXXXaoXXXXXXXXXXXX-320-483.gif\" alt=\"Tetris classic game react redux\" width=\"200\">\n</center>\n<ol start=\"2\">\n<li><a href=\"https://github.com/Pau1fitz/react-spotify\">Spotify Client</a> - This project is a client that communicates with the Spotify API.</li>\n</ol>\n<center>\n    <img src=\"https://raw.githubusercontent.com/Pau1fitz/react-spotify/master/browser.png\" alt=\"Spotify client react redux\" width=\"500\">\n</center>\n<ol start=\"3\">\n<li><a href=\"https://github.com/Th3Wall/Fakeflix\">Fakeflix</a> - This project is inspired from Netflix. The project is mid-level complexity.</li>\n</ol>\n<center>\n    <img src=\"https://cdn.jsdelivr.net/gh/Th3Wall/assets-cdn/Fakeflix/Fakeflix_readme.png\" alt=\"Spotify client react redux\" width=\"500\">\n</center>\n<h4>Last note:</h4>\n<p>It's important to note that Redux is just one of many options for global state management in a React application. Other popular options include <a href=\"https://mobx.js.org/\">MobX</a> and the <a href=\"https://reactjs.org/docs/context.html\">React context API</a>.</p>","frontmatter":{"title":"React Redux","date":"December 19, 2022","description":"Understand React redux"}},"previous":{"fields":{"slug":"/react-custom-hook/"},"frontmatter":{"title":"React custom hook"}},"next":null},"pageContext":{"id":"2d307e45-e00a-5996-a074-e3f982dbd24c","previousPostId":"b700312a-6e34-57f0-8610-a7d5fd7e407a","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}