{"version":3,"file":"component---src-pages-404-js-04889dc5e5de02b820e1.js","mappings":"6IAiCA,IA9Be,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,EAEA,sBAAIG,UAAU,gBACZ,gBAAC,EAAAC,KAAI,CAACC,GAAG,KAAKP,IAKhB,gBAAC,EAAAM,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCP,GAML,uBAAKK,UAAU,iBAAiB,oBAAmBH,GACjD,0BAAQG,UAAU,iBAAiBD,GACnC,4BAAOH,GACP,6CACc,IAAIO,MAAOC,cAAa,oBAElC,C,+CCoBV,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEV,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEU,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBd,MAExC,OACE,gCACE,6BAAQe,EAAkBf,EAAK,MAAMe,EAAiBf,GACtD,wBAAMgB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASjB,IACnC,wBAAMkB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASjB,IACpC,wBAAMgB,KAAK,sBAAsBC,QAASJ,IACzCZ,EACA,C,kGCvCP,MAWaoB,EAAO,IAAM,gBAAC,IAAG,CAACrB,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAEsB,EAAI,SAAEvB,GAAU,EACtC,MAAMwB,EAAYD,EAAKX,KAAKG,aAAad,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAOuB,GACjC,4CACA,oFACO,C","sources":["webpack://easy-code-blog/./src/components/layout.js","webpack://easy-code-blog/./src/components/seo.js","webpack://easy-code-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        copyright Â©{new Date().getFullYear()}, easy-code blog\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["location","title","children","isRootPath","pathname","header","className","Link","to","Date","getFullYear","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","data","siteTitle"],"sourceRoot":""}